static num: i32 = 0 + 1;

layout<input,0> a_pos: vec2<f32>;

layout<input,1> i_pos: vec2<f32>;
layout<input,2> i_size: vec2<f32>;
layout<input,3> i_color: vec3<f32>;
layout<input,4> i_radius: f32;

layout<output,0> color: vec2<f32>;
layout<output,1> uv: vec2<f32>;
layout<output,2> size: vec2<f32>;
layout<output,3> radius: f32;

fn add(a: f32,b: f32) -> f32{
    a + b
}

fn main() {
    let a: f32 = add(1.0,1.0);
    let num: i32 = 1.0 as i32;


    let num2: f32 = a;

    num2 = 1.0;
    num2 += 1.0;

    let f1 : vec2<f32> = glsl::vec2(1.0,1.0);
    let f2 : vec2<f64> = glsl::vec2(0.0,0.0);

    let i1 : vec2<i32> = glsl::ivec2(0,0);
    let i2 : vec2<u32> = glsl::uvec2(0,0);


    gl_Position = glsl::vec4(0.0,0.0,0.0,0.0);

}